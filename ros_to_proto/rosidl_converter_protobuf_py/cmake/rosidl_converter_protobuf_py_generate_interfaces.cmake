# Generate Python conversion code for Protocol Buffers

find_package(rmw REQUIRED)
find_package(Python3 REQUIRED COMPONENTS Interpreter)
find_package(rosidl_generator_py REQUIRED)

# Set output path
set(_output_path 
  "${CMAKE_CURRENT_BINARY_DIR}/rosidl_converter_protobuf_py/${PROJECT_NAME}")

# Generate a list of files to be created
set(_generated_py_files "")

# We need to process all IDL files (msg, srv, action)
foreach(_abs_idl_file ${rosidl_generate_interfaces_ABS_IDL_FILES})
  get_filename_component(_parent_folder "${_abs_idl_file}" DIRECTORY)
  get_filename_component(_parent_folder "${_parent_folder}" NAME)
  get_filename_component(_idl_name "${_abs_idl_file}" NAME_WE)
  string_camel_case_to_lower_case_underscore("${_idl_name}" _module_name)
  
  # The target file will be a *_pb_support.py file
  list(APPEND _generated_py_files
    "${_output_path}/${_parent_folder}/${_module_name}_pb_support.py")
endforeach()

# Ensure output directory exists
file(MAKE_DIRECTORY "${_output_path}")
file(WRITE "${_output_path}/__init__.py" "# Generated by rosidl_converter_protobuf_py\n")

# Create directory structure and __init__.py files for all subdirectories
set(_generated_module_dirs "")
foreach(_generated_py_file ${_generated_py_files})
  get_filename_component(_parent_folder "${_generated_py_file}" DIRECTORY)
  set(_init_module "${_parent_folder}/__init__.py")
  list(FIND _generated_py_files "${_init_module}" _index)
  if(_index EQUAL -1)
    list(APPEND _generated_py_files "${_init_module}")
    string(LENGTH "${_output_path}" _length)
    math(EXPR _index "${_length} + 1")
    string(SUBSTRING "${_parent_folder}" ${_index} -1 _relative_directory)
    list(APPEND _generated_module_dirs "${_relative_directory}")
  endif()
endforeach()

# Gather dependencies
set(_dependency_files "")
set(_dependencies "")
foreach(_pkg_name ${rosidl_generate_interfaces_DEPENDENCY_PACKAGE_NAMES})
  foreach(_idl_file ${${_pkg_name}_IDL_FILES})
    set(_abs_idl_file "${${_pkg_name}_DIR}/../${_idl_file}")
    normalize_path(_abs_idl_file "${_abs_idl_file}")
    list(APPEND _dependency_files "${_abs_idl_file}")
    list(APPEND _dependencies "${_pkg_name}:${_abs_idl_file}")
  endforeach()
endforeach()

# Set dependencies for the target
set(target_dependencies
  "${rosidl_converter_protobuf_py_BIN}"
  ${rosidl_converter_protobuf_py_GENERATOR_FILES}
  "${rosidl_converter_protobuf_py_TEMPLATE_DIR}/type_support.py.em"
  ${rosidl_generate_interfaces_ABS_IDL_FILES}
  ${_dependency_files})

# Check that all dependencies exist
foreach(dep ${target_dependencies})
  if(NOT EXISTS "${dep}")
    message(FATAL_ERROR "Target dependency '${dep}' does not exist")
  endif()
endforeach()

# Generate arguments file
set(generator_arguments_file "${CMAKE_CURRENT_BINARY_DIR}/rosidl_converter_protobuf_py__arguments.json")
rosidl_write_generator_arguments(
  "${generator_arguments_file}"
  PACKAGE_NAME "${PROJECT_NAME}"
  IDL_TUPLES "${rosidl_generate_interfaces_IDL_TUPLES}"
  ROS_INTERFACE_DEPENDENCIES "${_dependencies}"
  OUTPUT_DIR "${_output_path}"
  TEMPLATE_DIR "${rosidl_converter_protobuf_py_TEMPLATE_DIR}"
  TARGET_DEPENDENCIES ${target_dependencies}
)

# Set up installation
if(NOT rosidl_generate_interfaces_SKIP_INSTALL)
  install(FILES "${_output_path}/__init__.py"
    DESTINATION "${PYTHON_INSTALL_DIR}/${PROJECT_NAME}"
  )
  
  foreach(_generated_dir ${_generated_module_dirs})
    install(DIRECTORY "${_output_path}/${_generated_dir}/"
      DESTINATION "${PYTHON_INSTALL_DIR}/${PROJECT_NAME}/${_generated_dir}"
      PATTERN "*.py"
    )
  endforeach()
endif()

# Custom target suffix
set(_target_suffix "__pb_py")

# Use a separate CMakeLists.txt to generate the custom command
set(_subdir "${CMAKE_CURRENT_BINARY_DIR}/${rosidl_generate_interfaces_TARGET}${_target_suffix}")
file(MAKE_DIRECTORY "${_subdir}")

# Write the custom command cmake file
file(WRITE "${_subdir}/CMakeLists.txt" "
# Generated from rosidl_converter_protobuf_py/cmake/rosidl_converter_protobuf_py_generate_interfaces.cmake
add_custom_command(
  OUTPUT ${_generated_py_files}
  COMMAND ${PYTHON_EXECUTABLE} ${rosidl_converter_protobuf_py_BIN}
  --generator-arguments-file \"${generator_arguments_file}\"
  DEPENDS 
    ${target_dependencies} 
    ${rosidl_generate_interfaces_TARGET}__rosidl_generator_py
  COMMENT \"Generating Python Protocol Buffer converters for ${PROJECT_NAME}\"
  VERBATIM
)

if(TARGET ${rosidl_generate_interfaces_TARGET}${_target_suffix})
  message(WARNING \"Custom target ${rosidl_generate_interfaces_TARGET}${_target_suffix} already exists\")
else()
  add_custom_target(
    ${rosidl_generate_interfaces_TARGET}${_target_suffix} ALL
    DEPENDS
    ${_generated_py_files}
  )
endif()
")

# Add the subdirectory with the custom command
add_subdirectory("${_subdir}" ${rosidl_generate_interfaces_TARGET}${_target_suffix})

# Mark the files as generated
set_property(
  SOURCE
  ${_generated_py_files}
  PROPERTY GENERATED 1)